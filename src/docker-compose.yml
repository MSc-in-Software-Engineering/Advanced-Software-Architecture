version: "3"

services:
  ### Kafka
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  ### Warehouse
  warehouse:
    build:
      context: ./Warehouse/
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka
      - supply-chain-management-database

  ### SCM
  supply-chain-management-database:
    build:
      context: ./SupplyChainManagementDatabase/
      dockerfile: Dockerfile
    ports:
      - "5432:5432"

  ### MQTT Mediator
  mqtt-mediator:
    build:
      context: ./MQTTMediator/
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
      - MQTT_BROKER_ADDRESS=production-broker
    depends_on:
      - kafka
    restart: on-failure

  ### Production floor
  robotics:
    build:
      context: ./ProductionFloor/Robotics
      dockerfile: Dockerfile
    environment:
      - MQTT_BROKER_ADDRESS=production-broker
    depends_on:
      - production-broker

  ### Metrics analysis
  metrics-analysis:
    build:
      context: ./MetricsAnalysis/
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - production-broker

  ### Mosquitto
  production-broker:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./ProductionFloor/mosquitto.conf:/mosquitto/config/mosquitto.conf

volumes:
  kafka_data:
    driver: local
